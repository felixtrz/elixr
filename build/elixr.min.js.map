{"version":3,"file":"elixr.min.js","sources":["../node_modules/ecsy/src/Utils.js","../node_modules/ecsy/src/SystemManager.js","../node_modules/ecsy/src/ObjectPool.js","../node_modules/ecsy/src/EventDispatcher.js","../node_modules/ecsy/src/Query.js","../node_modules/ecsy/src/QueryManager.js","../node_modules/ecsy/src/Component.js","../node_modules/ecsy/src/SystemStateComponent.js","../node_modules/ecsy/src/EntityManager.js","../node_modules/ecsy/src/ComponentManager.js","../node_modules/ecsy/src/Version.js","../node_modules/ecsy/src/Entity.js","../node_modules/ecsy/src/World.js","../node_modules/ecsy/src/System.js","../node_modules/ecsy/src/TagComponent.js","../node_modules/ecsy/src/Types.js","../node_modules/ecsy/src/RemoteDevTools/utils.js","../node_modules/ecsy/src/RemoteDevTools/index.js","../src/GameObject.js","../src/GameComponent.js","../src/GameSystem.js","../src/Core.js"],"sourcesContent":["/**\n * Return the name of a component\n * @param {Component} Component\n * @private\n */\nexport function getName(Component) {\n  return Component.name;\n}\n\n/**\n * Return a valid property name for the Component\n * @param {Component} Component\n * @private\n */\nexport function componentPropertyName(Component) {\n  return getName(Component);\n}\n\n/**\n * Get a key from a list of components\n * @param {Array(Component)} Components Array of components to generate the key\n * @private\n */\nexport function queryKey(Components) {\n  var ids = [];\n  for (var n = 0; n < Components.length; n++) {\n    var T = Components[n];\n\n    if (!componentRegistered(T)) {\n      throw new Error(`Tried to create a query with an unregistered component`);\n    }\n\n    if (typeof T === \"object\") {\n      var operator = T.operator === \"not\" ? \"!\" : T.operator;\n      ids.push(operator + T.Component._typeId);\n    } else {\n      ids.push(T._typeId);\n    }\n  }\n\n  return ids.sort().join(\"-\");\n}\n\n// Detector for browser's \"window\"\nexport const hasWindow = typeof window !== \"undefined\";\n\n// performance.now() \"polyfill\"\nexport const now =\n  hasWindow && typeof window.performance !== \"undefined\"\n    ? performance.now.bind(performance)\n    : Date.now.bind(Date);\n\nexport function componentRegistered(T) {\n  return (\n    (typeof T === \"object\" && T.Component._typeId !== undefined) ||\n    (T.isComponent && T._typeId !== undefined)\n  );\n}\n","import { now } from \"./Utils.js\";\n\nexport class SystemManager {\n  constructor(world) {\n    this._systems = [];\n    this._executeSystems = []; // Systems that have `execute` method\n    this.world = world;\n    this.lastExecutedSystem = null;\n  }\n\n  registerSystem(SystemClass, attributes) {\n    if (!SystemClass.isSystem) {\n      throw new Error(\n        `System '${SystemClass.name}' does not extend 'System' class`\n      );\n    }\n\n    if (this.getSystem(SystemClass) !== undefined) {\n      console.warn(`System '${SystemClass.getName()}' already registered.`);\n      return this;\n    }\n\n    var system = new SystemClass(this.world, attributes);\n    if (system.init) system.init(attributes);\n    system.order = this._systems.length;\n    this._systems.push(system);\n    if (system.execute) {\n      this._executeSystems.push(system);\n      this.sortSystems();\n    }\n    return this;\n  }\n\n  unregisterSystem(SystemClass) {\n    let system = this.getSystem(SystemClass);\n    if (system === undefined) {\n      console.warn(\n        `Can unregister system '${SystemClass.getName()}'. It doesn't exist.`\n      );\n      return this;\n    }\n\n    this._systems.splice(this._systems.indexOf(system), 1);\n\n    if (system.execute) {\n      this._executeSystems.splice(this._executeSystems.indexOf(system), 1);\n    }\n\n    // @todo Add system.unregister() call to free resources\n    return this;\n  }\n\n  sortSystems() {\n    this._executeSystems.sort((a, b) => {\n      return a.priority - b.priority || a.order - b.order;\n    });\n  }\n\n  getSystem(SystemClass) {\n    return this._systems.find((s) => s instanceof SystemClass);\n  }\n\n  getSystems() {\n    return this._systems;\n  }\n\n  removeSystem(SystemClass) {\n    var index = this._systems.indexOf(SystemClass);\n    if (!~index) return;\n\n    this._systems.splice(index, 1);\n  }\n\n  executeSystem(system, delta, time) {\n    if (system.initialized) {\n      if (system.canExecute()) {\n        let startTime = now();\n        system.execute(delta, time);\n        system.executeTime = now() - startTime;\n        this.lastExecutedSystem = system;\n        system.clearEvents();\n      }\n    }\n  }\n\n  stop() {\n    this._executeSystems.forEach((system) => system.stop());\n  }\n\n  execute(delta, time, forcePlay) {\n    this._executeSystems.forEach(\n      (system) =>\n        (forcePlay || system.enabled) && this.executeSystem(system, delta, time)\n    );\n  }\n\n  stats() {\n    var stats = {\n      numSystems: this._systems.length,\n      systems: {},\n    };\n\n    for (var i = 0; i < this._systems.length; i++) {\n      var system = this._systems[i];\n      var systemStats = (stats.systems[system.getName()] = {\n        queries: {},\n        executeTime: system.executeTime,\n      });\n      for (var name in system.ctx) {\n        systemStats.queries[name] = system.ctx[name].stats();\n      }\n    }\n\n    return stats;\n  }\n}\n","export class ObjectPool {\n  // @todo Add initial size\n  constructor(T, initialSize) {\n    this.freeList = [];\n    this.count = 0;\n    this.T = T;\n    this.isObjectPool = true;\n\n    if (typeof initialSize !== \"undefined\") {\n      this.expand(initialSize);\n    }\n  }\n\n  acquire() {\n    // Grow the list by 20%ish if we're out\n    if (this.freeList.length <= 0) {\n      this.expand(Math.round(this.count * 0.2) + 1);\n    }\n\n    var item = this.freeList.pop();\n\n    return item;\n  }\n\n  release(item) {\n    item.reset();\n    this.freeList.push(item);\n  }\n\n  expand(count) {\n    for (var n = 0; n < count; n++) {\n      var clone = new this.T();\n      clone._pool = this;\n      this.freeList.push(clone);\n    }\n    this.count += count;\n  }\n\n  totalSize() {\n    return this.count;\n  }\n\n  totalFree() {\n    return this.freeList.length;\n  }\n\n  totalUsed() {\n    return this.count - this.freeList.length;\n  }\n}\n","/**\n * @private\n * @class EventDispatcher\n */\nexport default class EventDispatcher {\n  constructor() {\n    this._listeners = {};\n    this.stats = {\n      fired: 0,\n      handled: 0,\n    };\n  }\n\n  /**\n   * Add an event listener\n   * @param {String} eventName Name of the event to listen\n   * @param {Function} listener Callback to trigger when the event is fired\n   */\n  addEventListener(eventName, listener) {\n    let listeners = this._listeners;\n    if (listeners[eventName] === undefined) {\n      listeners[eventName] = [];\n    }\n\n    if (listeners[eventName].indexOf(listener) === -1) {\n      listeners[eventName].push(listener);\n    }\n  }\n\n  /**\n   * Check if an event listener is already added to the list of listeners\n   * @param {String} eventName Name of the event to check\n   * @param {Function} listener Callback for the specified event\n   */\n  hasEventListener(eventName, listener) {\n    return (\n      this._listeners[eventName] !== undefined &&\n      this._listeners[eventName].indexOf(listener) !== -1\n    );\n  }\n\n  /**\n   * Remove an event listener\n   * @param {String} eventName Name of the event to remove\n   * @param {Function} listener Callback for the specified event\n   */\n  removeEventListener(eventName, listener) {\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Dispatch an event\n   * @param {String} eventName Name of the event to dispatch\n   * @param {Entity} entity (Optional) Entity to emit\n   * @param {Component} component\n   */\n  dispatchEvent(eventName, entity, component) {\n    this.stats.fired++;\n\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var array = listenerArray.slice(0);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i].call(this, entity, component);\n      }\n    }\n  }\n\n  /**\n   * Reset stats counters\n   */\n  resetCounters() {\n    this.stats.fired = this.stats.handled = 0;\n  }\n}\n","import EventDispatcher from \"./EventDispatcher.js\";\nimport { queryKey } from \"./Utils.js\";\n\nexport default class Query {\n  /**\n   * @param {Array(Component)} Components List of types of components to query\n   */\n  constructor(Components, manager) {\n    this.Components = [];\n    this.NotComponents = [];\n\n    Components.forEach((component) => {\n      if (typeof component === \"object\") {\n        this.NotComponents.push(component.Component);\n      } else {\n        this.Components.push(component);\n      }\n    });\n\n    if (this.Components.length === 0) {\n      throw new Error(\"Can't create a query without components\");\n    }\n\n    this.entities = [];\n\n    this.eventDispatcher = new EventDispatcher();\n\n    // This query is being used by a reactive system\n    this.reactive = false;\n\n    this.key = queryKey(Components);\n\n    // Fill the query with the existing entities\n    for (var i = 0; i < manager._entities.length; i++) {\n      var entity = manager._entities[i];\n      if (this.match(entity)) {\n        // @todo ??? this.addEntity(entity); => preventing the event to be generated\n        entity.queries.push(this);\n        this.entities.push(entity);\n      }\n    }\n  }\n\n  /**\n   * Add entity to this query\n   * @param {Entity} entity\n   */\n  addEntity(entity) {\n    entity.queries.push(this);\n    this.entities.push(entity);\n\n    this.eventDispatcher.dispatchEvent(Query.prototype.ENTITY_ADDED, entity);\n  }\n\n  /**\n   * Remove entity from this query\n   * @param {Entity} entity\n   */\n  removeEntity(entity) {\n    let index = this.entities.indexOf(entity);\n    if (~index) {\n      this.entities.splice(index, 1);\n\n      index = entity.queries.indexOf(this);\n      entity.queries.splice(index, 1);\n\n      this.eventDispatcher.dispatchEvent(\n        Query.prototype.ENTITY_REMOVED,\n        entity\n      );\n    }\n  }\n\n  match(entity) {\n    return (\n      entity.hasAllComponents(this.Components) &&\n      !entity.hasAnyComponents(this.NotComponents)\n    );\n  }\n\n  toJSON() {\n    return {\n      key: this.key,\n      reactive: this.reactive,\n      components: {\n        included: this.Components.map((C) => C.name),\n        not: this.NotComponents.map((C) => C.name),\n      },\n      numEntities: this.entities.length,\n    };\n  }\n\n  /**\n   * Return stats for this query\n   */\n  stats() {\n    return {\n      numComponents: this.Components.length,\n      numEntities: this.entities.length,\n    };\n  }\n}\n\nQuery.prototype.ENTITY_ADDED = \"Query#ENTITY_ADDED\";\nQuery.prototype.ENTITY_REMOVED = \"Query#ENTITY_REMOVED\";\nQuery.prototype.COMPONENT_CHANGED = \"Query#COMPONENT_CHANGED\";\n","import Query from \"./Query.js\";\nimport { queryKey } from \"./Utils.js\";\n\n/**\n * @private\n * @class QueryManager\n */\nexport default class QueryManager {\n  constructor(world) {\n    this._world = world;\n\n    // Queries indexed by a unique identifier for the components it has\n    this._queries = {};\n  }\n\n  onEntityRemoved(entity) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n      if (entity.queries.indexOf(query) !== -1) {\n        query.removeEntity(entity);\n      }\n    }\n  }\n\n  /**\n   * Callback when a component is added to an entity\n   * @param {Entity} entity Entity that just got the new component\n   * @param {Component} Component Component added to the entity\n   */\n  onEntityComponentAdded(entity, Component) {\n    // @todo Use bitmask for checking components?\n\n    // Check each indexed query to see if we need to add this entity to the list\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        ~query.entities.indexOf(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n\n      // Add the entity only if:\n      // Component is in the query\n      // and Entity has ALL the components of the query\n      // and Entity is not already in the query\n      if (\n        !~query.Components.indexOf(Component) ||\n        !query.match(entity) ||\n        ~query.entities.indexOf(entity)\n      )\n        continue;\n\n      query.addEntity(entity);\n    }\n  }\n\n  /**\n   * Callback when a component is removed from an entity\n   * @param {Entity} entity Entity to remove the component from\n   * @param {Component} Component Component to remove from the entity\n   */\n  onEntityComponentRemoved(entity, Component) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        !~query.entities.indexOf(entity) &&\n        query.match(entity)\n      ) {\n        query.addEntity(entity);\n        continue;\n      }\n\n      if (\n        !!~query.Components.indexOf(Component) &&\n        !!~query.entities.indexOf(entity) &&\n        !query.match(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n    }\n  }\n\n  /**\n   * Get a query for the specified components\n   * @param {Component} Components Components that the query should have\n   */\n  getQuery(Components) {\n    var key = queryKey(Components);\n    var query = this._queries[key];\n    if (!query) {\n      this._queries[key] = query = new Query(Components, this._world);\n    }\n    return query;\n  }\n\n  /**\n   * Return some stats from this class\n   */\n  stats() {\n    var stats = {};\n    for (var queryName in this._queries) {\n      stats[queryName] = this._queries[queryName].stats();\n    }\n    return stats;\n  }\n}\n","export class Component {\n  constructor(props) {\n    if (props !== false) {\n      const schema = this.constructor.schema;\n\n      for (const key in schema) {\n        if (props && props.hasOwnProperty(key)) {\n          this[key] = props[key];\n        } else {\n          const schemaProp = schema[key];\n          if (schemaProp.hasOwnProperty(\"default\")) {\n            this[key] = schemaProp.type.clone(schemaProp.default);\n          } else {\n            const type = schemaProp.type;\n            this[key] = type.clone(type.default);\n          }\n        }\n      }\n\n      if (process.env.NODE_ENV !== \"production\" && props !== undefined) {\n        this.checkUndefinedAttributes(props);\n      }\n    }\n\n    this._pool = null;\n  }\n\n  copy(source) {\n    const schema = this.constructor.schema;\n\n    for (const key in schema) {\n      const prop = schema[key];\n\n      if (source.hasOwnProperty(key)) {\n        this[key] = prop.type.copy(source[key], this[key]);\n      }\n    }\n\n    // @DEBUG\n    if (process.env.NODE_ENV !== \"production\") {\n      this.checkUndefinedAttributes(source);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  reset() {\n    const schema = this.constructor.schema;\n\n    for (const key in schema) {\n      const schemaProp = schema[key];\n\n      if (schemaProp.hasOwnProperty(\"default\")) {\n        this[key] = schemaProp.type.copy(schemaProp.default, this[key]);\n      } else {\n        const type = schemaProp.type;\n        this[key] = type.copy(type.default, this[key]);\n      }\n    }\n  }\n\n  dispose() {\n    if (this._pool) {\n      this._pool.release(this);\n    }\n  }\n\n  getName() {\n    return this.constructor.getName();\n  }\n\n  checkUndefinedAttributes(src) {\n    const schema = this.constructor.schema;\n\n    // Check that the attributes defined in source are also defined in the schema\n    Object.keys(src).forEach((srcKey) => {\n      if (!schema.hasOwnProperty(srcKey)) {\n        console.warn(\n          `Trying to set attribute '${srcKey}' not defined in the '${this.constructor.name}' schema. Please fix the schema, the attribute value won't be set`\n        );\n      }\n    });\n  }\n}\n\nComponent.schema = {};\nComponent.isComponent = true;\nComponent.getName = function () {\n  return this.displayName || this.name;\n};\n","import { Component } from \"./Component.js\";\n\nexport class SystemStateComponent extends Component {}\n\nSystemStateComponent.isSystemStateComponent = true;\n","import { ObjectPool } from \"./ObjectPool.js\";\nimport QueryManager from \"./QueryManager.js\";\nimport EventDispatcher from \"./EventDispatcher.js\";\nimport { SystemStateComponent } from \"./SystemStateComponent.js\";\n\nclass EntityPool extends ObjectPool {\n  constructor(entityManager, entityClass, initialSize) {\n    super(entityClass, undefined);\n    this.entityManager = entityManager;\n\n    if (typeof initialSize !== \"undefined\") {\n      this.expand(initialSize);\n    }\n  }\n\n  expand(count) {\n    for (var n = 0; n < count; n++) {\n      var clone = new this.T(this.entityManager);\n      clone._pool = this;\n      this.freeList.push(clone);\n    }\n    this.count += count;\n  }\n}\n\n/**\n * @private\n * @class EntityManager\n */\nexport class EntityManager {\n  constructor(world) {\n    this.world = world;\n    this.componentsManager = world.componentsManager;\n\n    // All the entities in this instance\n    this._entities = [];\n    this._nextEntityId = 0;\n\n    this._entitiesByNames = {};\n\n    this._queryManager = new QueryManager(this);\n    this.eventDispatcher = new EventDispatcher();\n    this._entityPool = new EntityPool(\n      this,\n      this.world.options.entityClass,\n      this.world.options.entityPoolSize\n    );\n\n    // Deferred deletion\n    this.entitiesWithComponentsToRemove = [];\n    this.entitiesToRemove = [];\n    this.deferredRemovalEnabled = true;\n  }\n\n  getEntityByName(name) {\n    return this._entitiesByNames[name];\n  }\n\n  /**\n   * Create a new entity\n   */\n  createEntity(name) {\n    var entity = this._entityPool.acquire();\n    entity.alive = true;\n    entity.name = name || \"\";\n    if (name) {\n      if (this._entitiesByNames[name]) {\n        console.warn(`Entity name '${name}' already exist`);\n      } else {\n        this._entitiesByNames[name] = entity;\n      }\n    }\n\n    this._entities.push(entity);\n    this.eventDispatcher.dispatchEvent(ENTITY_CREATED, entity);\n    return entity;\n  }\n\n  // COMPONENTS\n\n  /**\n   * Add a component to an entity\n   * @param {Entity} entity Entity where the component will be added\n   * @param {Component} Component Component to be added to the entity\n   * @param {Object} values Optional values to replace the default attributes\n   */\n  entityAddComponent(entity, Component, values) {\n    // @todo Probably define Component._typeId with a default value and avoid using typeof\n    if (\n      typeof Component._typeId === \"undefined\" &&\n      !this.world.componentsManager._ComponentsMap[Component._typeId]\n    ) {\n      throw new Error(\n        `Attempted to add unregistered component \"${Component.getName()}\"`\n      );\n    }\n\n    if (~entity._ComponentTypes.indexOf(Component)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\n          \"Component type already exists on entity.\",\n          entity,\n          Component.getName()\n        );\n      }\n      return;\n    }\n\n    entity._ComponentTypes.push(Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      entity.numStateComponents++;\n    }\n\n    var componentPool = this.world.componentsManager.getComponentsPool(\n      Component\n    );\n\n    var component = componentPool\n      ? componentPool.acquire()\n      : new Component(values);\n\n    if (componentPool && values) {\n      component.copy(values);\n    }\n\n    entity._components[Component._typeId] = component;\n\n    this._queryManager.onEntityComponentAdded(entity, Component);\n    this.world.componentsManager.componentAddedToEntity(Component);\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_ADDED, entity, Component);\n  }\n\n  /**\n   * Remove a component from an entity\n   * @param {Entity} entity Entity which will get removed the component\n   * @param {*} Component Component to remove from the entity\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  entityRemoveComponent(entity, Component, immediately) {\n    var index = entity._ComponentTypes.indexOf(Component);\n    if (!~index) return;\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_REMOVE, entity, Component);\n\n    if (immediately) {\n      this._entityRemoveComponentSync(entity, Component, index);\n    } else {\n      if (entity._ComponentTypesToRemove.length === 0)\n        this.entitiesWithComponentsToRemove.push(entity);\n\n      entity._ComponentTypes.splice(index, 1);\n      entity._ComponentTypesToRemove.push(Component);\n\n      entity._componentsToRemove[Component._typeId] =\n        entity._components[Component._typeId];\n      delete entity._components[Component._typeId];\n    }\n\n    // Check each indexed query to see if we need to remove it\n    this._queryManager.onEntityComponentRemoved(entity, Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      entity.numStateComponents--;\n\n      // Check if the entity was a ghost waiting for the last system state component to be removed\n      if (entity.numStateComponents === 0 && !entity.alive) {\n        entity.remove();\n      }\n    }\n  }\n\n  _entityRemoveComponentSync(entity, Component, index) {\n    // Remove T listing on entity and property ref, then free the component.\n    entity._ComponentTypes.splice(index, 1);\n    var component = entity._components[Component._typeId];\n    delete entity._components[Component._typeId];\n    component.dispose();\n    this.world.componentsManager.componentRemovedFromEntity(Component);\n  }\n\n  /**\n   * Remove all the components from an entity\n   * @param {Entity} entity Entity from which the components will be removed\n   */\n  entityRemoveAllComponents(entity, immediately) {\n    let Components = entity._ComponentTypes;\n\n    for (let j = Components.length - 1; j >= 0; j--) {\n      if (Components[j].__proto__ !== SystemStateComponent)\n        this.entityRemoveComponent(entity, Components[j], immediately);\n    }\n  }\n\n  /**\n   * Remove the entity from this manager. It will clear also its components\n   * @param {Entity} entity Entity to remove from the manager\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  removeEntity(entity, immediately) {\n    var index = this._entities.indexOf(entity);\n\n    if (!~index) throw new Error(\"Tried to remove entity not in list\");\n\n    entity.alive = false;\n    this.entityRemoveAllComponents(entity, immediately);\n\n    if (entity.numStateComponents === 0) {\n      // Remove from entity list\n      this.eventDispatcher.dispatchEvent(ENTITY_REMOVED, entity);\n      this._queryManager.onEntityRemoved(entity);\n      if (immediately === true) {\n        this._releaseEntity(entity, index);\n      } else {\n        this.entitiesToRemove.push(entity);\n      }\n    }\n  }\n\n  _releaseEntity(entity, index) {\n    this._entities.splice(index, 1);\n\n    if (this._entitiesByNames[entity.name]) {\n      delete this._entitiesByNames[entity.name];\n    }\n    entity._pool.release(entity);\n  }\n\n  /**\n   * Remove all entities from this manager\n   */\n  removeAllEntities() {\n    for (var i = this._entities.length - 1; i >= 0; i--) {\n      this.removeEntity(this._entities[i]);\n    }\n  }\n\n  processDeferredRemoval() {\n    if (!this.deferredRemovalEnabled) {\n      return;\n    }\n\n    for (let i = 0; i < this.entitiesToRemove.length; i++) {\n      let entity = this.entitiesToRemove[i];\n      let index = this._entities.indexOf(entity);\n      this._releaseEntity(entity, index);\n    }\n    this.entitiesToRemove.length = 0;\n\n    for (let i = 0; i < this.entitiesWithComponentsToRemove.length; i++) {\n      let entity = this.entitiesWithComponentsToRemove[i];\n      while (entity._ComponentTypesToRemove.length > 0) {\n        let Component = entity._ComponentTypesToRemove.pop();\n\n        var component = entity._componentsToRemove[Component._typeId];\n        delete entity._componentsToRemove[Component._typeId];\n        component.dispose();\n        this.world.componentsManager.componentRemovedFromEntity(Component);\n\n        //this._entityRemoveComponentSync(entity, Component, index);\n      }\n    }\n\n    this.entitiesWithComponentsToRemove.length = 0;\n  }\n\n  /**\n   * Get a query based on a list of components\n   * @param {Array(Component)} Components List of components that will form the query\n   */\n  queryComponents(Components) {\n    return this._queryManager.getQuery(Components);\n  }\n\n  // EXTRAS\n\n  /**\n   * Return number of entities\n   */\n  count() {\n    return this._entities.length;\n  }\n\n  /**\n   * Return some stats\n   */\n  stats() {\n    var stats = {\n      numEntities: this._entities.length,\n      numQueries: Object.keys(this._queryManager._queries).length,\n      queries: this._queryManager.stats(),\n      numComponentPool: Object.keys(this.componentsManager._componentPool)\n        .length,\n      componentPool: {},\n      eventDispatcher: this.eventDispatcher.stats,\n    };\n\n    for (var ecsyComponentId in this.componentsManager._componentPool) {\n      var pool = this.componentsManager._componentPool[ecsyComponentId];\n      stats.componentPool[pool.T.getName()] = {\n        used: pool.totalUsed(),\n        size: pool.count,\n      };\n    }\n\n    return stats;\n  }\n}\n\nconst ENTITY_CREATED = \"EntityManager#ENTITY_CREATE\";\nconst ENTITY_REMOVED = \"EntityManager#ENTITY_REMOVED\";\nconst COMPONENT_ADDED = \"EntityManager#COMPONENT_ADDED\";\nconst COMPONENT_REMOVE = \"EntityManager#COMPONENT_REMOVE\";\n","import { ObjectPool } from \"./ObjectPool.js\";\n\nexport class ComponentManager {\n  constructor() {\n    this.Components = [];\n    this._ComponentsMap = {};\n\n    this._componentPool = {};\n    this.numComponents = {};\n    this.nextComponentId = 0;\n  }\n\n  hasComponent(Component) {\n    return this.Components.indexOf(Component) !== -1;\n  }\n\n  registerComponent(Component, objectPool) {\n    if (this.Components.indexOf(Component) !== -1) {\n      console.warn(\n        `Component type: '${Component.getName()}' already registered.`\n      );\n      return;\n    }\n\n    const schema = Component.schema;\n\n    if (!schema) {\n      throw new Error(\n        `Component \"${Component.getName()}\" has no schema property.`\n      );\n    }\n\n    for (const propName in schema) {\n      const prop = schema[propName];\n\n      if (!prop.type) {\n        throw new Error(\n          `Invalid schema for component \"${Component.getName()}\". Missing type for \"${propName}\" property.`\n        );\n      }\n    }\n\n    Component._typeId = this.nextComponentId++;\n    this.Components.push(Component);\n    this._ComponentsMap[Component._typeId] = Component;\n    this.numComponents[Component._typeId] = 0;\n\n    if (objectPool === undefined) {\n      objectPool = new ObjectPool(Component);\n    } else if (objectPool === false) {\n      objectPool = undefined;\n    }\n\n    this._componentPool[Component._typeId] = objectPool;\n  }\n\n  componentAddedToEntity(Component) {\n    this.numComponents[Component._typeId]++;\n  }\n\n  componentRemovedFromEntity(Component) {\n    this.numComponents[Component._typeId]--;\n  }\n\n  getComponentsPool(Component) {\n    return this._componentPool[Component._typeId];\n  }\n}\n","export const Version = \"0.3.1\";\n","import Query from \"./Query.js\";\nimport wrapImmutableComponent from \"./WrapImmutableComponent.js\";\n\nexport class Entity {\n  constructor(entityManager) {\n    this._entityManager = entityManager || null;\n\n    // Unique ID for this entity\n    this.id = entityManager._nextEntityId++;\n\n    // List of components types the entity has\n    this._ComponentTypes = [];\n\n    // Instance of the components\n    this._components = {};\n\n    this._componentsToRemove = {};\n\n    // Queries where the entity is added\n    this.queries = [];\n\n    // Used for deferred removal\n    this._ComponentTypesToRemove = [];\n\n    this.alive = false;\n\n    //if there are state components on a entity, it can't be removed completely\n    this.numStateComponents = 0;\n  }\n\n  // COMPONENTS\n\n  getComponent(Component, includeRemoved) {\n    var component = this._components[Component._typeId];\n\n    if (!component && includeRemoved === true) {\n      component = this._componentsToRemove[Component._typeId];\n    }\n\n    return process.env.NODE_ENV !== \"production\"\n      ? wrapImmutableComponent(Component, component)\n      : component;\n  }\n\n  getRemovedComponent(Component) {\n    const component = this._componentsToRemove[Component._typeId];\n\n    return process.env.NODE_ENV !== \"production\"\n      ? wrapImmutableComponent(Component, component)\n      : component;\n  }\n\n  getComponents() {\n    return this._components;\n  }\n\n  getComponentsToRemove() {\n    return this._componentsToRemove;\n  }\n\n  getComponentTypes() {\n    return this._ComponentTypes;\n  }\n\n  getMutableComponent(Component) {\n    var component = this._components[Component._typeId];\n\n    if (!component) {\n      return;\n    }\n\n    for (var i = 0; i < this.queries.length; i++) {\n      var query = this.queries[i];\n      // @todo accelerate this check. Maybe having query._Components as an object\n      // @todo add Not components\n      if (query.reactive && query.Components.indexOf(Component) !== -1) {\n        query.eventDispatcher.dispatchEvent(\n          Query.prototype.COMPONENT_CHANGED,\n          this,\n          component\n        );\n      }\n    }\n    return component;\n  }\n\n  addComponent(Component, values) {\n    this._entityManager.entityAddComponent(this, Component, values);\n    return this;\n  }\n\n  removeComponent(Component, forceImmediate) {\n    this._entityManager.entityRemoveComponent(this, Component, forceImmediate);\n    return this;\n  }\n\n  hasComponent(Component, includeRemoved) {\n    return (\n      !!~this._ComponentTypes.indexOf(Component) ||\n      (includeRemoved === true && this.hasRemovedComponent(Component))\n    );\n  }\n\n  hasRemovedComponent(Component) {\n    return !!~this._ComponentTypesToRemove.indexOf(Component);\n  }\n\n  hasAllComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (!this.hasComponent(Components[i])) return false;\n    }\n    return true;\n  }\n\n  hasAnyComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (this.hasComponent(Components[i])) return true;\n    }\n    return false;\n  }\n\n  removeAllComponents(forceImmediate) {\n    return this._entityManager.entityRemoveAllComponents(this, forceImmediate);\n  }\n\n  copy(src) {\n    // TODO: This can definitely be optimized\n    for (var ecsyComponentId in src._components) {\n      var srcComponent = src._components[ecsyComponentId];\n      this.addComponent(srcComponent.constructor);\n      var component = this.getComponent(srcComponent.constructor);\n      component.copy(srcComponent);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new Entity(this._entityManager).copy(this);\n  }\n\n  reset() {\n    this.id = this._entityManager._nextEntityId++;\n    this._ComponentTypes.length = 0;\n    this.queries.length = 0;\n\n    for (var ecsyComponentId in this._components) {\n      delete this._components[ecsyComponentId];\n    }\n  }\n\n  remove(forceImmediate) {\n    return this._entityManager.removeEntity(this, forceImmediate);\n  }\n}\n","import { SystemManager } from \"./SystemManager.js\";\nimport { EntityManager } from \"./EntityManager.js\";\nimport { ComponentManager } from \"./ComponentManager.js\";\nimport { Version } from \"./Version.js\";\nimport { hasWindow, now } from \"./Utils.js\";\nimport { Entity } from \"./Entity.js\";\n\nconst DEFAULT_OPTIONS = {\n  entityPoolSize: 0,\n  entityClass: Entity,\n};\n\nexport class World {\n  constructor(options = {}) {\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n    this.componentsManager = new ComponentManager(this);\n    this.entityManager = new EntityManager(this);\n    this.systemManager = new SystemManager(this);\n\n    this.enabled = true;\n\n    this.eventQueues = {};\n\n    if (hasWindow && typeof CustomEvent !== \"undefined\") {\n      var event = new CustomEvent(\"ecsy-world-created\", {\n        detail: { world: this, version: Version },\n      });\n      window.dispatchEvent(event);\n    }\n\n    this.lastTime = now() / 1000;\n  }\n\n  registerComponent(Component, objectPool) {\n    this.componentsManager.registerComponent(Component, objectPool);\n    return this;\n  }\n\n  registerSystem(System, attributes) {\n    this.systemManager.registerSystem(System, attributes);\n    return this;\n  }\n\n  hasRegisteredComponent(Component) {\n    return this.componentsManager.hasComponent(Component);\n  }\n\n  unregisterSystem(System) {\n    this.systemManager.unregisterSystem(System);\n    return this;\n  }\n\n  getSystem(SystemClass) {\n    return this.systemManager.getSystem(SystemClass);\n  }\n\n  getSystems() {\n    return this.systemManager.getSystems();\n  }\n\n  execute(delta, time) {\n    if (!delta) {\n      time = now() / 1000;\n      delta = time - this.lastTime;\n      this.lastTime = time;\n    }\n\n    if (this.enabled) {\n      this.systemManager.execute(delta, time);\n      this.entityManager.processDeferredRemoval();\n    }\n  }\n\n  stop() {\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  createEntity(name) {\n    return this.entityManager.createEntity(name);\n  }\n\n  stats() {\n    var stats = {\n      entities: this.entityManager.stats(),\n      system: this.systemManager.stats(),\n    };\n\n    return stats;\n  }\n}\n","import Query from \"./Query.js\";\nimport { componentRegistered } from \"./Utils.js\";\n\nexport class System {\n  canExecute() {\n    if (this._mandatoryQueries.length === 0) return true;\n\n    for (let i = 0; i < this._mandatoryQueries.length; i++) {\n      var query = this._mandatoryQueries[i];\n      if (query.entities.length === 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getName() {\n    return this.constructor.getName();\n  }\n\n  constructor(world, attributes) {\n    this.world = world;\n    this.enabled = true;\n\n    // @todo Better naming :)\n    this._queries = {};\n    this.queries = {};\n\n    this.priority = 0;\n\n    // Used for stats\n    this.executeTime = 0;\n\n    if (attributes && attributes.priority) {\n      this.priority = attributes.priority;\n    }\n\n    this._mandatoryQueries = [];\n\n    this.initialized = true;\n\n    if (this.constructor.queries) {\n      for (var queryName in this.constructor.queries) {\n        var queryConfig = this.constructor.queries[queryName];\n        var Components = queryConfig.components;\n        if (!Components || Components.length === 0) {\n          throw new Error(\"'components' attribute can't be empty in a query\");\n        }\n\n        // Detect if the components have already been registered\n        let unregisteredComponents = Components.filter(\n          (Component) => !componentRegistered(Component)\n        );\n\n        if (unregisteredComponents.length > 0) {\n          throw new Error(\n            `Tried to create a query '${\n              this.constructor.name\n            }.${queryName}' with unregistered components: [${unregisteredComponents\n              .map((c) => c.getName())\n              .join(\", \")}]`\n          );\n        }\n\n        var query = this.world.entityManager.queryComponents(Components);\n\n        this._queries[queryName] = query;\n        if (queryConfig.mandatory === true) {\n          this._mandatoryQueries.push(query);\n        }\n        this.queries[queryName] = {\n          results: query.entities,\n        };\n\n        // Reactive configuration added/removed/changed\n        var validEvents = [\"added\", \"removed\", \"changed\"];\n\n        const eventMapping = {\n          added: Query.prototype.ENTITY_ADDED,\n          removed: Query.prototype.ENTITY_REMOVED,\n          changed: Query.prototype.COMPONENT_CHANGED, // Query.prototype.ENTITY_CHANGED\n        };\n\n        if (queryConfig.listen) {\n          validEvents.forEach((eventName) => {\n            if (!this.execute) {\n              console.warn(\n                `System '${this.getName()}' has defined listen events (${validEvents.join(\n                  \", \"\n                )}) for query '${queryName}' but it does not implement the 'execute' method.`\n              );\n            }\n\n            // Is the event enabled on this system's query?\n            if (queryConfig.listen[eventName]) {\n              let event = queryConfig.listen[eventName];\n\n              if (eventName === \"changed\") {\n                query.reactive = true;\n                if (event === true) {\n                  // Any change on the entity from the components in the query\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    (entity) => {\n                      // Avoid duplicates\n                      if (eventList.indexOf(entity) === -1) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                } else if (Array.isArray(event)) {\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    (entity, changedComponent) => {\n                      // Avoid duplicates\n                      if (\n                        event.indexOf(changedComponent.constructor) !== -1 &&\n                        eventList.indexOf(entity) === -1\n                      ) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                } else {\n                  /*\n                  // Checking just specific components\n                  let changedList = (this.queries[queryName][eventName] = {});\n                  event.forEach(component => {\n                    let eventList = (changedList[\n                      componentPropertyName(component)\n                    ] = []);\n                    query.eventDispatcher.addEventListener(\n                      Query.prototype.COMPONENT_CHANGED,\n                      (entity, changedComponent) => {\n                        if (\n                          changedComponent.constructor === component &&\n                          eventList.indexOf(entity) === -1\n                        ) {\n                          eventList.push(entity);\n                        }\n                      }\n                    );\n                  });\n                  */\n                }\n              } else {\n                let eventList = (this.queries[queryName][eventName] = []);\n\n                query.eventDispatcher.addEventListener(\n                  eventMapping[eventName],\n                  (entity) => {\n                    // @fixme overhead?\n                    if (eventList.indexOf(entity) === -1)\n                      eventList.push(entity);\n                  }\n                );\n              }\n            }\n          });\n        }\n      }\n    }\n  }\n\n  stop() {\n    this.executeTime = 0;\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  // @question rename to clear queues?\n  clearEvents() {\n    for (let queryName in this.queries) {\n      var query = this.queries[queryName];\n      if (query.added) {\n        query.added.length = 0;\n      }\n      if (query.removed) {\n        query.removed.length = 0;\n      }\n      if (query.changed) {\n        if (Array.isArray(query.changed)) {\n          query.changed.length = 0;\n        } else {\n          for (let name in query.changed) {\n            query.changed[name].length = 0;\n          }\n        }\n      }\n    }\n  }\n\n  toJSON() {\n    var json = {\n      name: this.getName(),\n      enabled: this.enabled,\n      executeTime: this.executeTime,\n      priority: this.priority,\n      queries: {},\n    };\n\n    if (this.constructor.queries) {\n      var queries = this.constructor.queries;\n      for (let queryName in queries) {\n        let query = this.queries[queryName];\n        let queryDefinition = queries[queryName];\n        let jsonQuery = (json.queries[queryName] = {\n          key: this._queries[queryName].key,\n        });\n\n        jsonQuery.mandatory = queryDefinition.mandatory === true;\n        jsonQuery.reactive =\n          queryDefinition.listen &&\n          (queryDefinition.listen.added === true ||\n            queryDefinition.listen.removed === true ||\n            queryDefinition.listen.changed === true ||\n            Array.isArray(queryDefinition.listen.changed));\n\n        if (jsonQuery.reactive) {\n          jsonQuery.listen = {};\n\n          const methods = [\"added\", \"removed\", \"changed\"];\n          methods.forEach((method) => {\n            if (query[method]) {\n              jsonQuery.listen[method] = {\n                entities: query[method].length,\n              };\n            }\n          });\n        }\n      }\n    }\n\n    return json;\n  }\n}\n\nSystem.isSystem = true;\nSystem.getName = function () {\n  return this.displayName || this.name;\n};\n\nexport function Not(Component) {\n  return {\n    operator: \"not\",\n    Component: Component,\n  };\n}\n","import { Component } from \"./Component.js\";\n\nexport class TagComponent extends Component {\n  constructor() {\n    super(false);\n  }\n}\n\nTagComponent.isTagComponent = true;\n","export const copyValue = (src) => src;\n\nexport const cloneValue = (src) => src;\n\nexport const copyArray = (src, dest) => {\n  if (!src) {\n    return src;\n  }\n\n  if (!dest) {\n    return src.slice();\n  }\n\n  dest.length = 0;\n\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i]);\n  }\n\n  return dest;\n};\n\nexport const cloneArray = (src) => src && src.slice();\n\nexport const copyJSON = (src) => JSON.parse(JSON.stringify(src));\n\nexport const cloneJSON = (src) => JSON.parse(JSON.stringify(src));\n\nexport const copyCopyable = (src, dest) => {\n  if (!src) {\n    return src;\n  }\n\n  if (!dest) {\n    return src.clone();\n  }\n\n  return dest.copy(src);\n};\n\nexport const cloneClonable = (src) => src && src.clone();\n\nexport function createType(typeDefinition) {\n  var mandatoryProperties = [\"name\", \"default\", \"copy\", \"clone\"];\n\n  var undefinedProperties = mandatoryProperties.filter((p) => {\n    return !typeDefinition.hasOwnProperty(p);\n  });\n\n  if (undefinedProperties.length > 0) {\n    throw new Error(\n      `createType expects a type definition with the following properties: ${undefinedProperties.join(\n        \", \"\n      )}`\n    );\n  }\n\n  typeDefinition.isType = true;\n\n  return typeDefinition;\n}\n\n/**\n * Standard types\n */\nexport const Types = {\n  Number: createType({\n    name: \"Number\",\n    default: 0,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  Boolean: createType({\n    name: \"Boolean\",\n    default: false,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  String: createType({\n    name: \"String\",\n    default: \"\",\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  Array: createType({\n    name: \"Array\",\n    default: [],\n    copy: copyArray,\n    clone: cloneArray,\n  }),\n\n  Ref: createType({\n    name: \"Ref\",\n    default: undefined,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  JSON: createType({\n    name: \"JSON\",\n    default: null,\n    copy: copyJSON,\n    clone: cloneJSON,\n  }),\n};\n","export function generateId(length) {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nexport function injectScript(src, onLoad) {\n  var script = document.createElement(\"script\");\n  // @todo Use link to the ecsy-devtools repo?\n  script.src = src;\n  script.onload = onLoad;\n  (document.head || document.documentElement).appendChild(script);\n}\n","/* global Peer */\nimport { injectScript, generateId } from \"./utils.js\";\nimport { hasWindow } from \"../Utils.js\";\n\nfunction hookConsoleAndErrors(connection) {\n  var wrapFunctions = [\"error\", \"warning\", \"log\"];\n  wrapFunctions.forEach((key) => {\n    if (typeof console[key] === \"function\") {\n      var fn = console[key].bind(console);\n      console[key] = (...args) => {\n        connection.send({\n          method: \"console\",\n          type: key,\n          args: JSON.stringify(args),\n        });\n        return fn.apply(null, args);\n      };\n    }\n  });\n\n  window.addEventListener(\"error\", (error) => {\n    connection.send({\n      method: \"error\",\n      error: JSON.stringify({\n        message: error.error.message,\n        stack: error.error.stack,\n      }),\n    });\n  });\n}\n\nfunction includeRemoteIdHTML(remoteId) {\n  let infoDiv = document.createElement(\"div\");\n  infoDiv.style.cssText = `\n    align-items: center;\n    background-color: #333;\n    color: #aaa;\n    display:flex;\n    font-family: Arial;\n    font-size: 1.1em;\n    height: 40px;\n    justify-content: center;\n    left: 0;\n    opacity: 0.9;\n    position: absolute;\n    right: 0;\n    text-align: center;\n    top: 0;\n  `;\n\n  infoDiv.innerHTML = `Open ECSY devtools to connect to this page using the code:&nbsp;<b style=\"color: #fff\">${remoteId}</b>&nbsp;<button onClick=\"generateNewCode()\">Generate new code</button>`;\n  document.body.appendChild(infoDiv);\n\n  return infoDiv;\n}\n\nexport function enableRemoteDevtools(remoteId) {\n  if (!hasWindow) {\n    console.warn(\"Remote devtools not available outside the browser\");\n    return;\n  }\n\n  window.generateNewCode = () => {\n    window.localStorage.clear();\n    remoteId = generateId(6);\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\n    window.location.reload(false);\n  };\n\n  remoteId = remoteId || window.localStorage.getItem(\"ecsyRemoteId\");\n  if (!remoteId) {\n    remoteId = generateId(6);\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\n  }\n\n  let infoDiv = includeRemoteIdHTML(remoteId);\n\n  window.__ECSY_REMOTE_DEVTOOLS_INJECTED = true;\n  window.__ECSY_REMOTE_DEVTOOLS = {};\n\n  let Version = \"\";\n\n  // This is used to collect the worlds created before the communication is being established\n  let worldsBeforeLoading = [];\n  let onWorldCreated = (e) => {\n    var world = e.detail.world;\n    Version = e.detail.version;\n    worldsBeforeLoading.push(world);\n  };\n  window.addEventListener(\"ecsy-world-created\", onWorldCreated);\n\n  let onLoaded = () => {\n    // var peer = new Peer(remoteId);\n    var peer = new Peer(remoteId, {\n      host: \"peerjs.ecsy.io\",\n      secure: true,\n      port: 443,\n      config: {\n        iceServers: [\n          { url: \"stun:stun.l.google.com:19302\" },\n          { url: \"stun:stun1.l.google.com:19302\" },\n          { url: \"stun:stun2.l.google.com:19302\" },\n          { url: \"stun:stun3.l.google.com:19302\" },\n          { url: \"stun:stun4.l.google.com:19302\" },\n        ],\n      },\n      debug: 3,\n    });\n\n    peer.on(\"open\", (/* id */) => {\n      peer.on(\"connection\", (connection) => {\n        window.__ECSY_REMOTE_DEVTOOLS.connection = connection;\n        connection.on(\"open\", function () {\n          // infoDiv.style.visibility = \"hidden\";\n          infoDiv.innerHTML = \"Connected\";\n\n          // Receive messages\n          connection.on(\"data\", function (data) {\n            if (data.type === \"init\") {\n              var script = document.createElement(\"script\");\n              script.setAttribute(\"type\", \"text/javascript\");\n              script.onload = () => {\n                script.parentNode.removeChild(script);\n\n                // Once the script is injected we don't need to listen\n                window.removeEventListener(\n                  \"ecsy-world-created\",\n                  onWorldCreated\n                );\n                worldsBeforeLoading.forEach((world) => {\n                  var event = new CustomEvent(\"ecsy-world-created\", {\n                    detail: { world: world, version: Version },\n                  });\n                  window.dispatchEvent(event);\n                });\n              };\n              script.innerHTML = data.script;\n              (document.head || document.documentElement).appendChild(script);\n              script.onload();\n\n              hookConsoleAndErrors(connection);\n            } else if (data.type === \"executeScript\") {\n              let value = eval(data.script);\n              if (data.returnEval) {\n                connection.send({\n                  method: \"evalReturn\",\n                  value: value,\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  };\n\n  // Inject PeerJS script\n  injectScript(\n    \"https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js\",\n    onLoaded\n  );\n}\n\nif (hasWindow) {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  // @todo Provide a way to disable it if needed\n  if (urlParams.has(\"enable-remote-devtools\")) {\n    enableRemoteDevtools();\n  }\n}\n","import * as THREE from 'three';\n\nconst UNINITIALIZED_GAMEOBJECT_ERROR =\n\t'Cannot perform action on uninitialized GameObject';\n\nexport class GameObject extends THREE.Group {\n\tinit(ecsyEntity) {\n\t\tthis._ecsyEntity = ecsyEntity;\n\t\tthis._ecsyEntity.gameObject = this;\n\t}\n\n\tdestroy() {\n\t\tif (this._ecsyEntity) this._ecsyEntity.remove(true);\n\t\tif (this.parent) this.parent.remove(this);\n\t}\n\n\tduplicate() {\n\t\tif (!this._ecsyEntity) throw UNINITIALIZED_GAMEOBJECT_ERROR;\n\t\tconst newGameObject = super.clone(true);\n\t\tconst newEntity = this._ecsyEntity.clone();\n\t\tnewGameObject.init(newEntity);\n\t\treturn newGameObject;\n\t}\n\n\taddComponent(GameComponent, values) {\n\t\tif (!this._ecsyEntity) throw UNINITIALIZED_GAMEOBJECT_ERROR;\n\t\tthis._ecsyEntity.addComponent(GameComponent, values);\n\t\tconst newComponent = this.getMutableComponent(GameComponent);\n\t\tnewComponent.setGameObject(this);\n\t\treturn newComponent;\n\t}\n\n\tgetComponent(GameComponent) {\n\t\tif (!this._ecsyEntity) throw UNINITIALIZED_GAMEOBJECT_ERROR;\n\t\treturn this._ecsyEntity.getComponent(GameComponent);\n\t}\n\n\tgetMutableComponent(GameComponent) {\n\t\tif (!this._ecsyEntity) throw UNINITIALIZED_GAMEOBJECT_ERROR;\n\t\treturn this._ecsyEntity.getMutableComponent(GameComponent);\n\t}\n\n\tgetComponentTypes() {\n\t\tif (!this._ecsyEntity) throw UNINITIALIZED_GAMEOBJECT_ERROR;\n\t\treturn this._ecsyEntity.getComponentTypes();\n\t}\n\n\tgetComponents() {\n\t\tif (!this._ecsyEntity) throw UNINITIALIZED_GAMEOBJECT_ERROR;\n\t\treturn this._ecsyEntity.getComponents();\n\t}\n\n\tgetComponentsToRemove() {\n\t\tif (!this._ecsyEntity) throw UNINITIALIZED_GAMEOBJECT_ERROR;\n\t\treturn this._ecsyEntity.getComponentsToRemove();\n\t}\n\n\tgetRemovedComponent(GameComponent) {\n\t\tif (!this._ecsyEntity) throw UNINITIALIZED_GAMEOBJECT_ERROR;\n\t\treturn this._ecsyEntity.getRemovedComponent(GameComponent);\n\t}\n\n\thasAllComponents(GameComponents) {\n\t\tif (!this._ecsyEntity) throw UNINITIALIZED_GAMEOBJECT_ERROR;\n\t\treturn this._ecsyEntity.hasAllComponents(GameComponents);\n\t}\n\n\thasAnyComponents(GameComponents) {\n\t\tif (!this._ecsyEntity) throw UNINITIALIZED_GAMEOBJECT_ERROR;\n\t\treturn this._ecsyEntity.hasAnyComponents(GameComponents);\n\t}\n\n\thasComponent(GameComponent) {\n\t\tif (!this._ecsyEntity) throw UNINITIALIZED_GAMEOBJECT_ERROR;\n\t\treturn this._ecsyEntity.hasComponent(GameComponent);\n\t}\n\n\tremoveAllComponents(forceImmediate) {\n\t\tif (!this._ecsyEntity) throw UNINITIALIZED_GAMEOBJECT_ERROR;\n\t\tthis._ecsyEntity.removeAllComponents(forceImmediate);\n\t}\n\n\tremoveComponent(GameComponent, forceImmediate) {\n\t\tif (!this._ecsyEntity) throw UNINITIALIZED_GAMEOBJECT_ERROR;\n\t\tthis._ecsyEntity.removeComponent(GameComponent, forceImmediate);\n\t}\n}\n","import { Component } from 'ecsy';\n\nexport class GameComponent extends Component {\n\tsetGameObject(gameObject) {\n\t\tthis._gameObject = gameObject;\n\t}\n\n\tgetGameObject() {\n\t\treturn this._gameObject;\n\t}\n}\n","import { System } from 'ecsy';\n\nexport class GameSystem extends System {\n\tconstructor(world, attributes) {\n\t\tsuper(world, attributes);\n\t\tthis.core = this.world.core;\n\t}\n\n\texecute(delta, time) {\n\t\tthis.update(delta, time);\n\t}\n\n\tqueryGameObjects(queryId) {\n\t\tif (!this.queries[queryId])\n\t\t\tthrow 'Query id does not exist in current game system';\n\t\treturn this.queries[queryId].results.map((entity) => entity.gameObject);\n\t}\n}\n\nexport class XRGameSystem extends GameSystem {\n\texecute(delta, time) {\n\t\tif (this.core.isImmersive) {\n\t\t\tthis.update(delta, time);\n\t\t}\n\t}\n}\n\nexport class SingleUseGameSystem extends GameSystem {\n\texecute(delta, time) {\n\t\tthis.update(delta, time);\n\t\tthis.stop();\n\t}\n}\n\nexport class SingleUseXRGameSystem extends GameSystem {\n\texecute(delta, time) {\n\t\tif (this.core.isImmersive) {\n\t\t\tthis.update(delta, time);\n\t\t\tthis.stop();\n\t\t}\n\t}\n}\n","import * as THREE from 'three';\n\nimport { GameObject } from './GameObject';\nimport { GamepadWrapper } from 'gamepad-wrapper';\nimport { VRButton } from 'three/examples/jsm/webxr/VRButton.js';\nimport { World } from 'ecsy';\nimport { XRControllerModelFactory } from 'three/examples/jsm/webxr/XRControllerModelFactory';\n\nexport class Core {\n\tconstructor(sceneContainer, ecsyOptions = {}) {\n\t\tthis._ecsyWorld = new World(ecsyOptions);\n\t\tthis._ecsyWorld.core = this;\n\n\t\tthis._createThreeScene();\n\n\t\tsceneContainer.appendChild(this._renderer.domElement);\n\t\tdocument.body.appendChild(VRButton.createButton(this._renderer));\n\n\t\tthis._playerSpace = new THREE.Group();\n\t\tthis._playerSpace.add(this._camera);\n\t\tthis._scene.add(this._playerSpace);\n\t\tthis._controllers = {};\n\n\t\tthis._setupControllers();\n\n\t\tthis._setupRenderLoop();\n\t}\n\n\t_createThreeScene() {\n\t\tthis._scene = new THREE.Scene();\n\t\tthis._camera = new THREE.PerspectiveCamera(\n\t\t\t50,\n\t\t\twindow.innerWidth / window.innerHeight,\n\t\t\t0.1,\n\t\t\t100,\n\t\t);\n\t\tthis._renderer = new THREE.WebGLRenderer({\n\t\t\tantialias: true,\n\t\t\tmultiviewStereo: true,\n\t\t});\n\t\tthis._renderer.setPixelRatio(window.devicePixelRatio);\n\t\tthis._renderer.setSize(window.innerWidth, window.innerHeight);\n\t\tthis._renderer.outputEncoding = THREE.sRGBEncoding;\n\t\tthis._renderer.xr.enabled = true;\n\n\t\tthis._camera.position.set(0, 1.7, 0);\n\n\t\tconst onWindowResize = () => {\n\t\t\tthis._camera.aspect = window.innerWidth / window.innerHeight;\n\t\t\tthis._camera.updateProjectionMatrix();\n\t\t\tthis._renderer.setSize(window.innerWidth, window.innerHeight);\n\t\t};\n\n\t\twindow.addEventListener('resize', onWindowResize, false);\n\t}\n\n\t_setupControllers() {\n\t\tconst controllerModelFactory = new XRControllerModelFactory();\n\t\tconst webxrManager = this._renderer.xr;\n\t\tthis._controllers = {};\n\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tconst targetRaySpace = webxrManager.getController(i);\n\t\t\tconst gripSpace = webxrManager.getControllerGrip(i);\n\t\t\tthis._playerSpace.add(targetRaySpace);\n\t\t\tthis._playerSpace.add(gripSpace);\n\n\t\t\t// based on controller connected event\n\t\t\tconst controllerModel =\n\t\t\t\tcontrollerModelFactory.createControllerModel(gripSpace);\n\t\t\tgripSpace.add(controllerModel);\n\n\t\t\tgripSpace.addEventListener('connected', (event) => {\n\t\t\t\tconst handedness = event.data.handedness;\n\t\t\t\tif (!event.data.gamepad) return;\n\t\t\t\tthis._controllers[handedness] = {\n\t\t\t\t\ttargetRaySpace,\n\t\t\t\t\tgripSpace,\n\t\t\t\t\tgamepad: new GamepadWrapper(event.data.gamepad),\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tgripSpace.addEventListener('disconnected', (event) => {\n\t\t\t\tif (event.data?.handedness)\n\t\t\t\t\tdelete this._controllers[event.data.handedness];\n\t\t\t});\n\t\t}\n\t}\n\n\t_setupRenderLoop() {\n\t\tconst clock = new THREE.Clock();\n\t\tconst render = () => {\n\t\t\tconst delta = clock.getDelta();\n\t\t\tconst elapsedTime = clock.elapsedTime;\n\t\t\tObject.values(this._controllers).forEach((controller) => {\n\t\t\t\tcontroller.gamepad.update();\n\t\t\t});\n\t\t\tthis._ecsyWorld.execute(delta, elapsedTime);\n\t\t\tthis._renderer.render(this._scene, this._camera);\n\t\t};\n\n\t\tthis._renderer.setAnimationLoop(render);\n\t}\n\n\tget scene() {\n\t\treturn this._scene;\n\t}\n\n\tget renderer() {\n\t\treturn this._renderer;\n\t}\n\n\tget camera() {\n\t\treturn this._camera;\n\t}\n\n\tget playerSpace() {\n\t\treturn this._playerSpace;\n\t}\n\n\tget controllers() {\n\t\treturn this._controllers;\n\t}\n\n\tget isImmersive() {\n\t\treturn this._renderer.xr.isPresenting;\n\t}\n\n\tregisterGameSystem(GameSystem) {\n\t\tthis._ecsyWorld.registerSystem(GameSystem);\n\t}\n\n\tgetGameSystem(GameSystem) {\n\t\treturn this._ecsyWorld.getSystem(GameSystem);\n\t}\n\n\tgetGameSystems() {\n\t\treturn this._ecsyWorld.getSystems();\n\t}\n\n\tregisterGameComponent(GameComponent) {\n\t\tthis._ecsyWorld.registerComponent(GameComponent);\n\t}\n\n\thasRegisteredGameComponent(GameComponent) {\n\t\treturn this._ecsyWorld.hasRegisteredComponent(GameComponent);\n\t}\n\n\tunregisterGameSystem(GameSystem) {\n\t\tthis._ecsyWorld.unregisterSystem(GameSystem);\n\t}\n\n\tcreateEmptyGameObject() {\n\t\tconst ecsyEntity = this._ecsyWorld.createEntity();\n\t\tconst gameObject = new GameObject();\n\t\tgameObject.init(ecsyEntity);\n\t\treturn gameObject;\n\t}\n\n\tcreateGameObject(object3D) {\n\t\tconst ecsyEntity = this._ecsyWorld.createEntity();\n\t\tconst gameObject = new GameObject();\n\t\tthis._scene.add(gameObject);\n\t\tgameObject.init(ecsyEntity);\n\t\tif (object3D) {\n\t\t\tif (object3D.parent) {\n\t\t\t\tobject3D.parent.add(gameObject);\n\t\t\t\tgameObject.position.copy(object3D.position);\n\t\t\t\tgameObject.quaternion.copy(object3D.quaternion);\n\t\t\t}\n\t\t\tgameObject.attach(object3D);\n\t\t}\n\t\treturn gameObject;\n\t}\n\n\tplay() {\n\t\tthis._ecsyWorld.play();\n\t}\n\n\tstop() {\n\t\tthis._ecsyWorld.stop();\n\t}\n}\n"],"names":["queryKey","Components","ids","n","length","T","componentRegistered","Error","operator","push","Component","_typeId","sort","join","hasWindow","window","now","performance","bind","Date","undefined","isComponent","SystemManager","constructor","world","this","_systems","_executeSystems","lastExecutedSystem","registerSystem","SystemClass","attributes","isSystem","name","getSystem","console","warn","getName","system","init","order","execute","sortSystems","unregisterSystem","splice","indexOf","a","b","priority","find","s","getSystems","removeSystem","index","executeSystem","delta","time","initialized","canExecute","startTime","executeTime","clearEvents","stop","forEach","forcePlay","enabled","stats","numSystems","systems","i","systemStats","queries","ctx","ObjectPool","initialSize","freeList","count","isObjectPool","expand","acquire","Math","round","pop","release","item","reset","clone","_pool","totalSize","totalFree","totalUsed","EventDispatcher","_listeners","fired","handled","addEventListener","eventName","listener","listeners","hasEventListener","removeEventListener","listenerArray","dispatchEvent","entity","component","array","slice","call","resetCounters","Query","manager","NotComponents","entities","eventDispatcher","reactive","key","_entities","match","addEntity","prototype","ENTITY_ADDED","removeEntity","ENTITY_REMOVED","hasAllComponents","hasAnyComponents","toJSON","components","included","map","C","not","numEntities","numComponents","COMPONENT_CHANGED","QueryManager","_world","_queries","onEntityRemoved","queryName","query","onEntityComponentAdded","onEntityComponentRemoved","getQuery","props","schema","hasOwnProperty","schemaProp","type","default","copy","source","prop","dispose","checkUndefinedAttributes","src","Object","keys","srcKey","displayName","SystemStateComponent","isSystemStateComponent","EntityPool","entityManager","entityClass","super","EntityManager","componentsManager","_nextEntityId","_entitiesByNames","_queryManager","_entityPool","options","entityPoolSize","entitiesWithComponentsToRemove","entitiesToRemove","deferredRemovalEnabled","getEntityByName","createEntity","alive","ENTITY_CREATED","entityAddComponent","values","_ComponentsMap","_ComponentTypes","__proto__","numStateComponents","componentPool","getComponentsPool","_components","componentAddedToEntity","COMPONENT_ADDED","entityRemoveComponent","immediately","COMPONENT_REMOVE","_entityRemoveComponentSync","_ComponentTypesToRemove","_componentsToRemove","remove","componentRemovedFromEntity","entityRemoveAllComponents","j","_releaseEntity","removeAllEntities","processDeferredRemoval","queryComponents","numQueries","numComponentPool","_componentPool","ecsyComponentId","pool","used","size","ComponentManager","nextComponentId","hasComponent","registerComponent","objectPool","propName","Version","Entity","_entityManager","id","getComponent","includeRemoved","getRemovedComponent","getComponents","getComponentsToRemove","getComponentTypes","getMutableComponent","addComponent","removeComponent","forceImmediate","hasRemovedComponent","removeAllComponents","srcComponent","DEFAULT_OPTIONS","World","assign","systemManager","eventQueues","CustomEvent","event","detail","version","lastTime","System","hasRegisteredComponent","play","_mandatoryQueries","queryConfig","unregisteredComponents","filter","c","mandatory","results","validEvents","eventMapping","added","removed","changed","listen","eventList","Array","isArray","changedComponent","json","queryDefinition","jsonQuery","method","Not","TagComponent","isTagComponent","copyValue","cloneValue","copyArray","dest","cloneArray","copyJSON","JSON","parse","stringify","cloneJSON","createType","typeDefinition","undefinedProperties","p","isType","Types","Number","Boolean","String","Ref","generateId","result","characters","charactersLength","charAt","floor","random","injectScript","onLoad","script","document","createElement","onload","head","documentElement","appendChild","hookConsoleAndErrors","connection","fn","args","send","apply","error","message","stack","includeRemoteIdHTML","remoteId","infoDiv","style","cssText","innerHTML","body","enableRemoteDevtools","generateNewCode","localStorage","clear","setItem","location","reload","getItem","__ECSY_REMOTE_DEVTOOLS_INJECTED","__ECSY_REMOTE_DEVTOOLS","worldsBeforeLoading","onWorldCreated","e","onLoaded","peer","Peer","host","secure","port","config","iceServers","url","debug","on","data","setAttribute","parentNode","removeChild","value","eval","returnEval","urlParams","URLSearchParams","search","has","UNINITIALIZED_GAMEOBJECT_ERROR","GameObject","THREE","Group","ecsyEntity","_ecsyEntity","gameObject","destroy","parent","duplicate","newGameObject","newEntity","GameComponent","newComponent","setGameObject","GameComponents","_gameObject","getGameObject","GameSystem","core","update","queryGameObjects","queryId","XRGameSystem","isImmersive","SingleUseGameSystem","SingleUseXRGameSystem","Core","sceneContainer","ecsyOptions","_ecsyWorld","_createThreeScene","_renderer","domElement","VRButton","createButton","_playerSpace","add","_camera","_scene","_controllers","_setupControllers","_setupRenderLoop","Scene","PerspectiveCamera","innerWidth","innerHeight","WebGLRenderer","antialias","multiviewStereo","setPixelRatio","devicePixelRatio","setSize","outputEncoding","sRGBEncoding","xr","position","set","aspect","updateProjectionMatrix","controllerModelFactory","XRControllerModelFactory","webxrManager","targetRaySpace","getController","gripSpace","getControllerGrip","controllerModel","createControllerModel","handedness","gamepad","GamepadWrapper","clock","Clock","setAnimationLoop","getDelta","elapsedTime","controller","render","scene","renderer","camera","playerSpace","controllers","isPresenting","registerGameSystem","getGameSystem","getGameSystems","registerGameComponent","hasRegisteredGameComponent","unregisterGameSystem","createEmptyGameObject","createGameObject","object3D","quaternion","attach"],"mappings":"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"}